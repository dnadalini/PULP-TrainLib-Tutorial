# GENERAL PROPERTIES
project_name    = 'CNN_FP32'
project_path    = '../../../Ex01-TrainLib_Deployer/'
proj_folder     = project_path + project_name + '/'

# TRAINING PROPERTIES
epochs          = 5
batch_size      = 1                    # BATCHING NOT IMPLEMENTED!!
learning_rate   = 0.5
optimizer       = "SGD"                # Name of PyTorch's optimizer
loss_fn         = "MSELoss"            # Name of PyTorch's loss function


# ------- NETWORK GRAPH --------
# Manually define the list of the network (each layer in the list has its own properties in the relative index of each list)
layer_list      = [ 'conv2d', 'ReLU' ,'PW', 'ReLU', 'linear']
# Layer properties
sumnode_connections = [0, 0, 0, 0, 0]           #For Skipnode and Sumnode only, indicates the layer which is connected to

in_ch_list      = [ 3, 8, 8, 16, 16*6*6]          # Linear: size of input vector
out_ch_list     = [ 8, 8, 16, 16, 4]            # Linear: size of output vector
hk_list         = [ 3, 1, 1, 1, 1]             # Linear: = 1
wk_list         = [ 3, 1, 1, 1, 1]             # Linear: = 1
# Input activations' properties
hin_list        = [ 8, 6, 6, 4, 4]             # Linear: = 1
win_list        = [ 8, 6, 6, 4, 4]             # Linear: = 1
# Convolutional strides
h_str_list      = [ 1, 1, 1, 1, 1]             # Only for conv2d, maxpool, avgpool
w_str_list      = [ 1, 1, 1, 1, 1]             # Only for conv2d, maxpool, avgpool
# Padding (bilateral, adds the specified padding to both image sides)
h_pad_list      = [ 0, 0, 0, 0, 0]             # Only for conv2d, DW
w_pad_list      = [ 0, 0, 0, 0, 0]             # Only for conv2d, DW
# Define the lists to call the optimized matmuls for each layer (see mm_manager_list.txt, mm_manager_list_fp16.txt or mm_manager function body)
opt_mm_fw_list  = [ 3, 0, 3, 0, 0]
opt_mm_wg_list  = [ 3, 0, 3, 0, 0]
opt_mm_ig_list  = [ 3, 0, 3, 0, 0]
# Data type list for layer-by-layer deployment (mixed precision)
data_type_list   = ['FP32', 'FP32', 'FP32', 'FP32', 'FP32']
# Data layout list (CHW or HWC) 
data_layout_list = ['CHW', 'CHW', 'CHW', 'CHW', 'CHW']   # TO DO
# ----- END OF NETWORK GRAPH -----


# EXECUTION PROPERTIES
NUM_CORES       = 1
L1_SIZE_BYTES   = 60*(2**10)